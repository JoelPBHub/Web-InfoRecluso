@page "/add/prisoner"
@using Datos.Entities
@using Datos.Generic
@using Datos.Dtos
@using Datos.Interfaces
@using Datos.Utilities
@using System.Globalization

@inject ISnackbar snackbar
@inject NavigationManager navigationManager
@inject IPrisonerServices prisonerManager

@attribute [Authorize(Roles = "dev,admin,officer")]

<PageTitle>Reclusos</PageTitle>
<EditForm @ref=editForm Model="@model">
    <DataAnnotationsValidator />
    <MudPaper Elevation="1" Class="clr-main">
        <MudItem xs=12 lg=12 sm=12 xxl=12 Class="d-flex flex-wrap p-3 mx-sm-4 clr-main">
            <MudItem xs=12 sm=12 xl=12 xxl=12 Class="clr-main">
                <MudPaper Elevation="0" Class="mb-2 px-0 mx-0 clr-main">
                    <MudToolBar Dense=true Class="px-0 mx-0">
                        <MudChip Size="Size.Small"
                                 DisableRipple=true
                                 Disabled=false
                                 Label=true
                                 Style="cursor:default"
                                 Variant="Variant.Outlined"
                                 Color="Color.Primary"
                                 Class="mt-3">
                            <MudText Typo="Typo.button">
                                <b>Reclusos</b>
                            </MudText>
                        </MudChip>

                        <MudSpacer />

                        <MudTooltip Text="Limpiar Campos" Arrow="true" Placement="Placement.Left">
                            <MudIconButton Icon="@Icons.Material.Rounded.Brush" OnClick="@(()=> NewRecluse())" />
                        </MudTooltip>
                    </MudToolBar>
                </MudPaper>
            </MudItem>

            <MudDivider Light=false Class="my-2 mx-1" />

            @* nombre *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudTextField Label="Nombre" Class="mx-4"
                              @bind-Value="model.Names"
                              For="@(() => model.Names)"
                              AdornmentIcon="@Icons.Material.Rounded.Person"
                              Adornment=" Adornment.Start"
                              Margin="Margin.Dense"
                              IconSize="Size.Small"
                              DisableUnderLine=@false />
            </MudItem>

            @* apellido *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudTextField Label="Apellidos" Class="mx-4"
                              @bind-Value="model.LastName"
                              For="@(() => model.LastName)"
                              AdornmentIcon="@Icons.Material.Rounded.Person2"
                              Adornment=" Adornment.Start"
                              Margin="Margin.Dense"
                              IconSize="Size.Small"
                              DisableUnderLine=false />
            </MudItem>

            @* delitos *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudTextField Label="Delito" Class="mx-4"
                              @bind-Value="model.Crimes"
                              For="@(() => model.Crimes)"
                              AdornmentIcon="@Icons.Material.Rounded.ErrorOutline"
                              Adornment=" Adornment.Start"
                              IconSize="Size.Small"
                              Margin="Margin.Dense"
                              DisableUnderLine=false />
            </MudItem>

            @* cedula *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudTextField Label="Cedula" Class="mx-4"
                              @bind-Value="model.Id"
                              For="@(() => model.Id)"
                              MaxLength="20"
                              AdornmentIcon="@Icons.Material.Rounded.CreditCard"
                              Adornment=" Adornment.Start"
                              IconSize="Size.Small"
                              Margin="Margin.Dense"
                              DisableUnderLine=false />
            </MudItem>

            @* notas *@
            <MudItem xs=12 sm=12 xl=12 xxl=12>
                <MudTextField Label="Detalles del delito" Class="mx-4"
                              @bind-Value="model.Notes"
                              For="@(() => model.Notes)"
                              Lines="2"
                              AdornmentIcon="@Icons.Material.Rounded.Notes"
                              Adornment=" Adornment.Start"
                              Margin="Margin.Dense"
                              IconSize="Size.Small"
                              DisableUnderLine=false />
            </MudItem>

            @* fecha nacimiento *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudDatePicker Class="mx-4"
                               IconSize="Size.Small"
                               DisableToolbar="true"
                               Label="Fecha nacimiento"
                               Editable="true"
                               @bind-Date="model.BirthDate" />
            </MudItem>

            @* fecha admision *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudDatePicker Class="mx-4"
                               IconSize="Size.Small"
                               DisableToolbar="true"
                               Label="Fecha de ingreso al recinto"
                               Editable="true"
                               @bind-Date="model.AdmissionDate" />
            </MudItem>

            @* Genero *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudSelect Class="mx-4" @bind-Value="genderSelected" Label="Género" OpenIcon="@Icons.Material.Rounded.Transgender" AdornmentColor="Color.Secondary">
                    @foreach (Gender.GenderName item in Enum.GetValues(typeof(Gender.GenderName)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            @* Status *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudSelect Class="mx-4" @bind-Value="statusSelected" Label="Estado" OpenIcon="@Icons.Material.Rounded.Info" AdornmentColor="Color.Secondary">
                    @foreach (Conviction.Status item in Enum.GetValues(typeof(Conviction.Status)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            @* Recinto *@
            <MudItem xs=12 sm=6 xl=4 xxl=3>
                <MudSelect Class="mx-4" @bind-Value="prisonSelected" Label="Carcel" OpenIcon="@Icons.Material.Rounded.Security" AdornmentColor="Color.Secondary">
                    @foreach (var item in Prison.Prisons.ToList())
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudChip Class="mb-1 shadow my-4 mx-2 ml-auto" Size="Size.Small"
                     @onclick="@(() => OnValidSubmit())" Variant="Variant.Filled" Color="Color.Primary">
                + Agregar
            </MudChip>
        </MudItem>
    </MudPaper>
</EditForm>

@code {

    private Gender.GenderName genderSelected { get; set; } = Gender.GenderName.hombre;
    private Conviction.Status statusSelected { get; set; } = Conviction.Status.Preventivo;
    private string prisonSelected { get; set; }

    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = null;

    private bool CloseModal = true;
    private bool Success;
    private EditForm editForm = new EditForm();
    private PrisonerAddDto model = new();

    private Task NewRecluse()
    {
        model = (new());
        prisonSelected = string.Empty;
        return Task.CompletedTask;
    }

    private Task ClosePopUp(DialogResult dialog, bool force = false)
    {
        if (MudDialog != null && (force || CloseModal))
            MudDialog.Close(dialog);

        return Task.CompletedTask;
    }

    private async Task OnValidSubmit()
    {
        model.Gender = genderSelected.ToString();
        model.ConvictionStatus = statusSelected.ToString();
        model.Prison = prisonSelected?? string.Empty;

        if (!editForm.EditContext.Validate())
        {
            snackbar.Add("Completa todos los pasos", Severity.Error);
            return;
        }

        var response = await prisonerManager.AddPrisonerAsync(model);

        if (response == Response.Ok())
        {
            snackbar.Add(response.Message, Severity.Success);
            await NewRecluse();
            return;
        }

        snackbar.Add(string.IsNullOrEmpty(response?.Message) ? "Ha ocurrido error" : response?.Message, Severity.Error);
    }
}